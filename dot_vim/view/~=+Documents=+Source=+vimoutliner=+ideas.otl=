let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
map <buffer> <silent>  <Plug>VO_FollowLink
map <buffer> <silent>  <Plug>VO_JumpBack
map <buffer> <silent> ,,hD :call DeHoistAll()
map <buffer> <silent> ,,hd :call DeHoist()
map <buffer> <silent> ,,hh :call Hoist(line("."))
map <buffer> ,,= :call ComputeDoc()
map <buffer> <silent> ,,l <Plug>VO_CreateLink
noremap <buffer> <silent> ,,cz :call NewHMD(FindRootParent(line(".")))
noremap <buffer> <silent> ,,c9 :call SetPercent(".",90)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c8 :call SetPercent(".",80)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c7 :call SetPercent(".",70)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c6 :call SetPercent(".",60)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c5 :call SetPercent(".",50)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c4 :call SetPercent(".",40)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c3 :call SetPercent(".",30)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c2 :call SetPercent(".",20)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c1 :call SetPercent(".",10)|call CalculateMyBranch(line('.'))
noremap <buffer> <silent> ,,c- :call DecPercent(".")   |call CalculateMyBranch(line("."))
noremap <buffer> <silent> ,,c+ :call IncPercent(".")   |call CalculateMyBranch(line("."))
noremap <buffer> <silent> ,,cx :call SwitchBox()       |call CalculateMyBranch(line("."))
noremap <buffer> <silent> ,,cd :call DeleteCheckbox()
noremap <buffer> <silent> ,,cB :call InsertCheckBox()
noremap <buffer> <silent> ,,cp :call SafelyInsertCheckBoxPercentAlways()
noremap <buffer> <silent> ,,c% :call SafelyInsertCheckBoxPercent()
noremap <buffer> <silent> ,,cb :call SafelyInsertCheckBox()
map <buffer> ,,H :echo "VimOutliner reserved command: ,,H"
map <buffer> ,,h :echo "VimOutliner reserved command: ,,h"
nmap <buffer> ,,e :call Spawn()
map <buffer> ,,,, :source $HOME/.vimoutliner/outliner.vim
map <buffer> ,,1 :set foldlevel=0
map <buffer> ,,2 :set foldlevel=1
map <buffer> ,,3 :set foldlevel=2
map <buffer> ,,4 :set foldlevel=3
map <buffer> ,,5 :set foldlevel=4
map <buffer> ,,6 :set foldlevel=5
map <buffer> ,,7 :set foldlevel=6
map <buffer> ,,8 :set foldlevel=7
map <buffer> ,,9 :set foldlevel=8
map <buffer> ,,0 :set foldlevel=99999
map <buffer> ,,- o----------------------------------------0
map <buffer> ,,f :e .
map <buffer> <silent> ,,S :silent call SortChildren(1)
map <buffer> <silent> ,,s :silent call SortChildren(0)
nmap <buffer> ,,T ^:call InsertTime(1)a 
nmap <buffer> ,,t $:call InsertSpaceTime()
nmap <buffer> ,,D ^:call InsertDate(1)a 
nmap <buffer> ,,d $:call InsertSpaceDate()
map <buffer> <D-j>g :GrepRedirectedMessageOutput 
map <buffer> <D-j>r :RedirectMessageOutput 
map <buffer> <D-j>m :GrepMessages 
cnoremap <buffer> <expr>  fugitive#buffer().rev()
imap <buffer> <silent> ,,l <Plug>VO_CreateLinkI
imap <buffer> ,,H :echo "VimOutliner reserved command: ,,H"
imap <buffer> ,,h :echo "VimOutliner reserved command: ,,h"
map! <buffer> ,,w :wa
imap <buffer> ,,- ----------------------------------------
imap <buffer> ,,f :e .
imap <buffer> ,,t ~x:call InsertTime(0)a
imap <buffer> ,,d ~x:call InsertDate(0)a
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO::\ -,mO::\ \ ,eO:::,::,sO:>\ -,mO:>\ \ ,eO:>>,:>
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'vo_base'
setlocal filetype=vo_base
endif
setlocal foldcolumn=1
setlocal foldenable
setlocal foldexpr=MyHoistableFoldLevel(v:lnum)
setlocal foldignore=#
setlocal foldlevel=19
setlocal foldmarker={{{,}}}
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=MyFoldText()
setlocal formatexpr=
setlocal formatoptions=crqno
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,39,45,48-57,_,129-255
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal nomacmeta
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=syntaxcomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%*%t:%n/%{len(filter(range(1,bufnr('$')),'buflisted(v:val)'))}(%{FileSize()})[%H%#error#%M%*%R%W%Y]%{RenderStlFlag(&ff,'unix',1)}%*%{RenderStlFlag(&ff,'unix',0)},%{RenderStlFlag(&fenc,'utf-8',1)}%*%{RenderStlFlag(&fenc,'utf-8',0)}[%{IndentStatus(',','')}]%#error#%{StatuslineTabWarning()}%*%#error#%{StatuslineTrailingSpaceWarning()}%*%{StatuslineLongLineWarning()}\ %=\ %l,%c%V\ %P/%L%{XPMautoUpdate(\"statusline\")}
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'vo_base'
setlocal syntax=vo_base
endif
setlocal tabstop=2
setlocal tags=~/.vim/vimoutliner/vo_tags.tag,./tags,tags,~/Documents/Source/vimple/plugin/vim/../../tags/vimbuiltins.tags,~/Documents/Source/vimoutliner/.git/tags
setlocal textwidth=78
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=5
let s:l = 1 - ((0 * winheight(0) + 28) / 57)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
