*pathogen.txt*  Awesome Plugin Manager for Vim

Authors: Tim Pope <vim at tpope dot info>                   *pathogen-authors*
         Israel Chauca <israelchauca@gmail.com>
         Barry Arthur <barry.arthur@gmail.com>
License: Same terms as Vim itself (see |license|)

This plugin is only available if 'compatible' is not set.


INSTALLATION                                           *pathogen-installation*
Install pathogen.vim in ~/.vim/autoload (~\vimfiles\autoload on Windows) and
pathogen.txt in ~/.vim/doc (~\vimfiles\doc on Windows), then add this to your
vimrc:
>
  call pathogen#runtime_append_all_bundles()
<

Multiple directories can be given as arguments for that function and they will
be added to your |'runtimepath'|. If none is provided, "bundle" will be added.

Note that you need to invoke the pathogen functions before invoking "filetype
plugin indent on" if you want it to load ftdetect files. On Debian (and
probably other distros), the system vimrc does this early on, so you actually
need to "filetype off" before "filetype plugin indent on" to force reloading.


INTRODUCTION                                                        *pathogen*

Without a plugin manager, installing, upgrading and removing plugins in Vim is
painful, clumsy and frustrating. Pathogen solves all these problems by
providing individual install directories for each plugin.

It does this by keeping all plugins in a "bundle" directory. This bundle
directory is typically:
>
  ~/.vim/bundle/
<
But pathogen actually allows for multiple bundle directories. See
|pathogen-bundle| for more details.

Installing a plugin is then a simple matter of copying the plugin to its own
subdirectory beneath the bundle directory. Removing plugins is as easy as
removing that subdirectory. Because the plugins are isolated within their own
subdirectories, upgrading becomes a simple matter of removing the old and
installing the new, modulo some attention to possibly persistent user-data
that some plugins rely on.


FUNCTIONALITY                                         *pathogen-functionality*

                                                             *pathogen-plugin*
The :Plugin Command ~
-------------------

Everything in pathogen is controlled through the Plugin command. Using a
familiar cascading command style (ala subversion or git), the Plugin command
has the following subcommands:

                                                               *pathogen-list*
:Plugin list [all|enabled|disabled] ~

The "list" subcommand allows to see the status of the plugins being handled.

                                                           *pathogen-list-all*
  :Plugin list [all] ~

This shows a nicely formatted list of all plugins currently installed in Vim.
The enabled plugins have a leading '+' character, whereas a leading '-'
character is used to show that a plugin is currently disabled.

                                                       *pathogen-list-enabled*
  :Plugin list enabled~

This will list all of the enabled plugins current installed in Vim. To disable
a plugin, use the |pathogen-disable| command.

                                                      *pathogen-list-disabled*
  :Plugin list disabled~

This will list all of the disabled plugins current installed in Vim. To enable
a plugin, use the |pathogen-enable| command.

                                                             *pathogen-enable*
:Plugin enable <plugin>~
>
This will enable an installed plugin. If the plugin was already enabled then
nothing happens. If it was disabled, then the named plugin will become active
again when a new Vim session is started. You will have to restart your current
Vim session or start a new one to see the effect.

example:
>
    :Plugin enable TagList
<
                                                           *pathogen-disable*
:Plugin disable <plugin>~
>
This will disable an installed plugin. If the plugin was already disabled then
nothing happens. If it was enabled, then the named plugin will become inactive
when a new Vim session is started. You will have to restart your current Vim
session or start a new one to see the effect.

example:
>
    :Plugin disable TagList
<
                                                            *pathogen-install*
:Plugin install <plugin>~
>
This will use the vim-addon-manager to install the named plugin (here, the
great TagList plugin). You will need to have vim-addon-manager installed to
use this feature. See |pathogen-vam| for more details.

example:
>
    :Plugin install TagList
<
                                                             *pathogen-remove*
:Plugin remove <plugin>~
>
This will uninstall the named plugin.  You will need to have vim-addon-manager
installed to use this feature.  See |pathogen-vam| for more details.

example:
>
    :Plugin remove TagList
<


VIM ADDON MANAGER                                               *pathogen-vam*

Pathogen is able to use Marc Werber's great Vim Addon Manager to install and
remove plugins. You can get VAM from:

http://www.vim.org/scripts/script.php?script_id=2905

That page also has the necessary installation instructions. Once you have
installed VAM, restart Vim and try:
>
    :Plugin install your-desired-plugin-here
<


CONFIGURATION                                         *pathogen-configuration*

Pathogen stores its plugin configuration within the following file:
>
    ~/.vim/bundled_plugins
>

While it is possible for you to edit this file manually, there should really
be no need to do so. All of pathogen's functionality is available through the
|pathogen-plugin| command.


ISSUES                                                       *pathogen-issues*

There are no known issues with this version of pathogen. Please let one of the
following active maintainers know if you find any bugs:

* Israel Chauca <israelchauca at gmail dot com>

Israel can also be found lurking as Raimondi on #vim on freenode.net

 vim:tw=78:ts=8:ft=help:norl:
